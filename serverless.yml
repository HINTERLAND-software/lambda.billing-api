# Happy Coding!

service: ${file(./package.json):name}

plugins:
  - serverless-webpack
  - serverless-plugin-aws-alerts
  - serverless-domain-manager
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:AWS_REGION}
  logRetentionInDays: 30
  stage: ${opt:stage, env:ENV} # you can override this via the CLI argument
  apiKeys:
    - ${self:service}-key-${self:provider.stage}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  usagePlan:
    quota:
      limit: 2000
      period: MONTH
    throttle:
      burstLimit: 10
      rateLimit: 5
  environment: # Service wide environment variables
    STAGE: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    TOGGL_API_TOKEN: ${env:TOGGL_API_TOKEN}
    DEBITOOR_API_TOKEN: ${env:DEBITOOR_API_TOKEN}

custom:
  enabled:
    development: false
    production: true
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  # https://github.com/amplify-education/serverless-domain-manager
  customDomain:
    basePath: lambda-billing
    domainName: ${env:CUSTOM_DOMAIN}
    createRoute53Record: false
  # https://github.com/ACloudGuru/serverless-plugin-aws-alerts
  alerts:
    topics:
      alarm:
        topic: arn:aws:sns:eu-central-1:009255630476:alert-Topic-N47IM5J07MP7
    definitions: # these defaults are merged with your definitions
      functionErrors:
        treatMissingData: notBreaching
        period: 300
      functionInvocations:
        threshold: 50
        treatMissingData: notBreaching
        period: 300
      statusCodeErrors:
        metric: statusCodeErrors
        threshold: 0
        statistic: Sum
        period: 300
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
        pattern: '{$.statusCode != 200}'
        treatMissingData: missing
    alarms:
      - name: functionErrors
        enabled: true
      - name: functionInvocations
        enabled: true
      - name: statusCodeErrors
        enabled: true

functions:
  billingData:
    handler: handler.billingData
    events:
      - http:
          private: true
          cors: true
          path: /billing-data
          method: POST
      - schedule:
          rate: cron(0 21 L * ? *) # last day of the month 9pm
          enabled: ${self:custom.enabled.${self:provider.stage}}
